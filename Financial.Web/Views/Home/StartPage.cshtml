@model IEnumerable<Financial.Web.Models.Budget>

@{
    ViewBag.Title = User.Identity.Name.ToString() + "'s budgets";
}

<div class="jumbotron">
    <h1>Welcome @User.Identity.Name!</h1>
    <p class="lead">Feel free to browse your categories, or go ahead and add some transactions below.</p>
    <a class="btn btn-primary" href="@Url.Action("Create", "Budgets")">Add a budget</a>
</div>
@if (Model == null)
{
    <p>I'm sorry, there aren't any budgets to display yet.</p>
}
else
{
<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                @*<th>Users</th>*@
                <th>Number of Categories</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var budget in Model)
            {
            <tr>
                <td>@Html.ActionLink(budget.Title, "Details", "Budgets", new { id = budget.Id }, null)</td>
                <td>@budget.Description</td>
                @*<td>@for (int i = 0; i < budget.Users.Count(); i++)
                {
                    if (i == budget.Users.Count() - 1)
                    {
                        budget.Users.ElementAt(i).UserName;
                        break;
                    }
                    String.Format("{0}, ", budget.Users.ElementAt(i).UserName);
                }
                </td>*@
                <td>@budget.Categories.Count()</td>
                <td>@Html.ActionLink("Edit", "Edit", "Budgets", new { id = budget.Id }, null) | @Html.ActionLink("Delete", "Delete", "Budgets", new { id = budget.Id }, null)</td>
            </tr>
            }
        </tbody>
    </table>
</div>
}
